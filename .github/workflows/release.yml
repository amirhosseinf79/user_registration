name: Build, Release & Push Docker Images

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: main
            source: cmd
            output: main
            dockerfile: Dockerfile
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: Download dependencies
        run: go mod download

      - name: Build binary
        run: |
          mkdir -p output
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o output/${{ matrix.service.output }} ./${{ matrix.service.source }}
          file output/${{ matrix.service.output }}

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.service.output }}
          path: output/${{ matrix.service.output }}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          name: main
          path: binaries

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: binaries/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: main
            context: .
            dockerfile: cmd/Dockerfile
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.context }}/${{ matrix.service.dockerfile }}
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service.name }}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ matrix.service.name }}:${{ github.ref_name }}

  fire-on-server:
    runs-on: ubuntu-latest
    needs: docker
    steps:
      - name: Trigger deployment on server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd ${{ secrets.SERVER_SOURCE }}
            git pull origin staging
            docker compose pull
            docker compose up -d --remove-orphans
            docker system prune -f
            docker image prune -f
