definitions:
  auth.FieldEmailLogin:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  auth.FieldEmailRegister:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      password:
        type: string
      phoneNumber:
        type: string
    required:
    - email
    - firstName
    - lastName
    - password
    - phoneNumber
    type: object
  auth.FieldMobileLogin:
    properties:
      password:
        type: string
      phoneNumber:
        type: string
    required:
    - password
    - phoneNumber
    type: object
  auth.FieldRefreshToken:
    properties:
      refreshToken:
        type: string
    required:
    - refreshToken
    type: object
  auth.FieldSendOTP:
    properties:
      phoneNumber:
        type: string
    required:
    - phoneNumber
    type: object
  auth.FieldVerifyOTP:
    properties:
      code:
        type: string
      phoneNumber:
        type: string
    required:
    - code
    - phoneNumber
    type: object
  auth.OTPOkMock:
    properties:
      code:
        type: integer
      retryCount:
        type: integer
      ttl:
        type: integer
    type: object
  auth.ResponseJWT:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
  shared.MetaPagination:
    properties:
      currentPage:
        type: integer
      endPage:
        type: integer
      nextPage:
        type: integer
      pageSize:
        type: integer
      totalCount:
        type: integer
    type: object
  shared.ResponseOneMessage:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  user.FieldUpdateDetails:
    properties:
      email:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      phoneNumber:
        type: string
    type: object
  user.FieldUpdatePassword:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    required:
    - newPassword
    type: object
  user.FieldVerifyOTP:
    properties:
      code:
        type: string
    required:
    - code
    type: object
  user.ResponseDetails:
    properties:
      email:
        type: string
      emailVerified:
        type: boolean
      firstName:
        type: string
      hasPassword:
        type: boolean
      id:
        type: integer
      lastName:
        type: string
      mobileVerified:
        type: boolean
      phoneNumber:
        type: string
      registeredAt:
        type: string
    type: object
  user.ResponseList:
    properties:
      items:
        items:
          $ref: '#/definitions/user.ResponseDetails'
        type: array
      meta:
        $ref: '#/definitions/shared.MetaPagination'
    type: object
info:
  contact: {}
  title: User OTP Registration API
  version: "1.0"
paths:
  /auth/login/email:
    post:
      consumes:
      - application/json
      description: Login with Email & Password
      parameters:
      - description: Fields
        in: body
        name: fields
        required: true
        schema:
          $ref: '#/definitions/auth.FieldEmailLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/auth.ResponseJWT'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
      summary: Login By Email
      tags:
      - Auth
  /auth/login/mobile:
    post:
      consumes:
      - application/json
      description: Login with Mobile & Password
      parameters:
      - description: Fields
        in: body
        name: fields
        required: true
        schema:
          $ref: '#/definitions/auth.FieldMobileLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/auth.ResponseJWT'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
      summary: Login by Mobile
      tags:
      - Auth
  /auth/login/otp:
    post:
      consumes:
      - application/json
      description: Login By OTP Code
      parameters:
      - description: Fields
        in: body
        name: fields
        required: true
        schema:
          $ref: '#/definitions/auth.FieldVerifyOTP'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/auth.ResponseJWT'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
      summary: Login By OTP
      tags:
      - Auth
  /auth/refresh-token:
    post:
      consumes:
      - application/json
      description: Refresh Token
      parameters:
      - description: Fields
        in: body
        name: fields
        required: true
        schema:
          $ref: '#/definitions/auth.FieldRefreshToken'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/auth.ResponseJWT'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
      summary: Refresh Token
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register By Email
      parameters:
      - description: Fields
        in: body
        name: fields
        required: true
        schema:
          $ref: '#/definitions/auth.FieldEmailRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/auth.ResponseJWT'
            type: array
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
      summary: Register By Email
      tags:
      - Auth
  /auth/send-otp:
    post:
      consumes:
      - application/json
      description: Send OTP
      parameters:
      - description: Fields
        in: body
        name: fields
        required: true
        schema:
          $ref: '#/definitions/auth.FieldSendOTP'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.OTPOkMock'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
      summary: Send OTP
      tags:
      - Auth
  /profile:
    get:
      consumes:
      - application/json
      description: Get User profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ResponseDetails'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
      security:
      - BearerAuth: []
      summary: Get user profile
      tags:
      - Profile
  /profile/send/otp:
    post:
      consumes:
      - application/json
      description: Send Verify Code
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/auth.OTPOkMock'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
      security:
      - BearerAuth: []
      summary: Send Verify Code
      tags:
      - Profile
  /profile/update/info:
    patch:
      consumes:
      - application/json
      description: Update User Profile
      parameters:
      - description: user
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.FieldUpdateDetails'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ResponseDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
      security:
      - BearerAuth: []
      summary: Update user Profile
      tags:
      - Profile
  /profile/update/password:
    put:
      consumes:
      - application/json
      description: Update User Password
      parameters:
      - description: Fields
        in: body
        name: fields
        required: true
        schema:
          $ref: '#/definitions/user.FieldUpdatePassword'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ResponseDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
      security:
      - BearerAuth: []
      summary: Update user password
      tags:
      - Profile
  /profile/verify/mobile:
    post:
      consumes:
      - application/json
      description: verify Mobile
      parameters:
      - description: Fields
        in: body
        name: fields
        required: true
        schema:
          $ref: '#/definitions/user.FieldVerifyOTP'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ResponseDetails'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
      security:
      - BearerAuth: []
      summary: Verify Mobile
      tags:
      - Profile
  /user/{userID}:
    get:
      consumes:
      - application/json
      description: Get User Details by ID
      parameters:
      - description: UserID
        in: path
        name: userID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ResponseDetails'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/shared.ResponseOneMessage'
      summary: Get user details
      tags:
      - User
  /user/all:
    get:
      consumes:
      - application/json
      description: Get list of all users
      parameters:
      - in: query
        name: email
        type: string
      - in: query
        name: name
        type: string
      - in: query
        name: page
        type: integer
      - in: query
        name: pageSize
        type: integer
      - in: query
        name: phoneNumber
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.ResponseList'
      summary: Get all users
      tags:
      - User
securityDefinitions:
  BearerAuth:
    description: Bearer [...]
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
